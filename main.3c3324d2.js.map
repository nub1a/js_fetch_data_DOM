{"version":3,"sources":["scripts/main.js"],"names":["url","listOfPhones","document","createElement","getPhonesFromApi","fetch","getPhones","Promise","resolve","reject","then","response","json","data","setTimeout","Error","displayPhones","phones","forEach","phone","phoneListItem","textContent","name","append","getPhonesDetails","phonesIds","fetchedList","map","id","all","body","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EAAM,4DAENC,EAAeC,SAASC,cAAc,MAI5C,SAASC,IACAC,OAAAA,MAASL,GAAAA,OAAAA,EAAhB,iBAGF,SAASM,IACA,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BL,IACGM,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GAAQL,OAAAA,EAAQK,KAExBC,WAAW,WAAML,OAAAA,EACf,IAAIM,MAAM,mCACT,OAIP,SAASC,EAAcC,GACrBA,EAAOC,QAAQ,SAAAC,GACPC,IAAAA,EAAgBlB,SAASC,cAAc,MAE7CiB,EAAcC,YAAcF,EAAMG,KAClCrB,EAAasB,OAAOH,KAIxB,SAASI,EAAiBC,GAClBC,IAAAA,EAAcD,EAAUE,IAAI,SAAAC,GAAMvB,OAAAA,MAASL,GAAAA,OAAAA,EAAc4B,YAAAA,OAAAA,EAA3B,YAE7BrB,OAAAA,QAAQsB,IAAIH,GA9BrBxB,SAAS4B,KAAKP,OAAOtB,GAiCrBK,IACGI,KAAKM,GACLN,KAAK,SAAAO,GAAUA,OAAAA,EAAOU,IAAI,SAAAR,GAASA,OAAAA,EAAMS,OACzClB,KAAKc,GACLO,MAAM,SAAAC,GACC,MAAA,IAAIjB,MAAMiB","file":"main.3c3324d2.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst url = 'https://mate-academy.github.io/phone-catalogue-static/api';\n\nconst listOfPhones = document.createElement('ul');\n\ndocument.body.append(listOfPhones);\n\nfunction getPhonesFromApi() {\n  return fetch(`${url}/phones.json`);\n}\n\nfunction getPhones() {\n  return new Promise((resolve, reject) => {\n    getPhonesFromApi()\n      .then(response => response.json())\n      .then(data => resolve(data));\n\n    setTimeout(() => reject(\n      new Error('error: No answer from server.')\n    ), 5000);\n  });\n}\n\nfunction displayPhones(phones) {\n  phones.forEach(phone => {\n    const phoneListItem = document.createElement('li');\n\n    phoneListItem.textContent = phone.name;\n    listOfPhones.append(phoneListItem);\n  });\n}\n\nfunction getPhonesDetails(phonesIds) {\n  const fetchedList = phonesIds.map(id => fetch(`${url}/phones/${id}.json`));\n\n  return Promise.all(fetchedList);\n};\n\ngetPhones()\n  .then(displayPhones)\n  .then(phones => phones.map(phone => phone.id))\n  .then(getPhonesDetails)\n  .catch(error => {\n    throw new Error(error);\n  });\n"]}